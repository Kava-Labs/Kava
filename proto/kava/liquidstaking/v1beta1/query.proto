syntax = "proto3";
package kava.liquidstaking.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "kava/liquidstaking/v1beta1/store.proto";

option go_package = "github.com/kava-labs/kava/x/liquidstaking/types";

// Query defines the gRPC querier service for liquidstaking module
service Query {
  // Params queries all parameters of the liquidstaking module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/kava/liquidstaking/v1beta1/params";
  }
  // DelegationHolders queries liquidsavings DelegationHolders.
  rpc DelegationHolders(QueryDelegationHoldersRequest) returns (QueryDelegationHoldersResponse) {
    option (google.api.http).get = "/kava/liquidstaking/v1beta1/delegationHolders";
  }
}

// QueryParamsRequest defines the request type for querying x/liquidstaking
// parameters.
message QueryParamsRequest {}

// QueryParamsResponse defines the response type for querying x/liquidstaking
// parameters.
message QueryParamsResponse {
  option (gogoproto.goproto_getters) = false;

  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryDelegationHoldersRequest defines the request type for querying x/liquidstaking
// delegation holders.
message QueryDelegationHoldersRequest {
  string validator = 1;

  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryDelegationHoldersResponse defines the response type for querying x/liquidstaking
// delegation holders.
message QueryDelegationHoldersResponse {
  repeated DelegationHolder delegationHolders = 1 [(gogoproto.castrepeated) = "DelegationHolders", (gogoproto.nullable) = false];

  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
