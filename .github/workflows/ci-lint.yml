name: Lint Checks
on:
  workflow_call:

permissions:
  # Optional: allow write access to checks to allow the action to annotate code in the PR.
  checks: write

# run per commit ci checks against this commit
jobs:
  proto-lint:
    uses: ./.github/workflows/proto.yml
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        run: |
          # Fetch the full history to ensure we can compare commits
          git fetch --prune --unshallow
          # List changed files in the last commit
          changed_files=$(git diff --name-only HEAD^ HEAD | grep '\.go$')
          echo "Changed Go files:"
          echo "$changed_files"
          # Set the changed files as an output
          echo "changed_go_files=$changed_files" >> $GITHUB_ENV
          echo "::set-output name=changed_go_files::$changed_files"

      - name: List all changed files
        run: |
          for file in ${{ env.changed_go_files }}; do
            echo "$file was changed"
          done
      - name: Prepare Lint Args
        id: prepare-lint-args
        run: |
          changed_files="${{ env.changed_go_files }}"
          if [ -z "$changed_files" ]; then
            echo "No Go files changed, skipping golangci-lint."
            exit 0
          fi
          echo "Changed Go files:"
          echo "$changed_files"
          # Prepare arguments for golangci-lint
          lint_args=$(echo "$changed_files" | tr '\n' ' ')
          echo "lint_args=$lint_args" >> $GITHUB_ENV

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: ${{ steps.load-version.outputs.GOLANGCI_VERSION }}
          args: --timeout 30m --verbose --allow-parallel-runners --max-same-issues 0 --max-issues-per-linter 0 ${{ env.lint_args }}
          working-directory: ${{ github.workspace }}
        if: |
          contains(env.changed_go_files, '.go')

#      - name: Load Version
#        id: load-version
#        run: |
#          echo "GOLANGCI_VERSION=v$(cat .golangci-version)"
#
#      - name: golangci-lint
#        uses: golangci/golangci-lint-action@v6
#        with:
#          version: ${{ steps.load-version.outputs.GOLANGCI_VERSION }}
#          args: --timeout 30m --verbose --allow-parallel-runners --max-same-issues 0 --max-issues-per-linter 0
#          working-directory: ${{ github.workspace }}
#        if: |
#          contains(steps.changed-files.outputs.all_changed_files, '.go')
