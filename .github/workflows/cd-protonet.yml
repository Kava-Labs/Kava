name: Continuous Deployment (Protonet)
## run after every successful CI job of new commits to the master branch
#on:
#  workflow_run:
#    workflows: [Continuous Integration (Kava Master)]
#    types:
#      - completed
on:
  push:

jobs:
  # in order:
  # enter standby (prevents autoscaling group from killing node during deploy)
  # stop kava
  # take ebs + zfs snapshots
  # download updated binary and genesis
  # reset application database state (only done on internal testnet)
  reset-chain-to-zero-state:
    # only start cd pipeline if last ci run was successful
#    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    uses: ./.github/workflows/cd-reset-protonet.yml
    with:
      aws-region: us-east-1
      chain-tag-name: ChainId
      chain-id: proto_2221-17000
      auto_scaling_group_names: kava-protonet-iavl-v1-validator-api-node #,kava-protonet-iavl-v1-rpc-api-node
      ssm-document-name: kava-protonet-iavl-v1-instance-update
      playbook-name: reset-chain.yml
      playbook-infrastructure-branch: shef-protonet-validator-network-ephemeral
    secrets: inherit

  # setup test and development accounts and balances, deploy contracts by calling the chain's api
  seed-chain-state:
    uses: ./.github/workflows/cd-seed-chain.yml
    with:
      chain-api-url: https://rpc.app.protonet.us-east.production.kava.io:443
      chain-id: proto_2221-17000
      seed-script-filename: seed-protonet.sh
      erc20-deployer-network-name: protonet
      genesis_validator_addresses: "kavavaloper1jaw3g097lq9jdrnscchspr2233yhpsxdlq7ula"
      kava_version_filepath:  ./ci/env/kava-protonet/KAVA.VERSION
    secrets: inherit
    needs: [reset-chain-to-zero-state]
  post-pipeline-metrics:
    uses: ./.github/workflows/metric-pipeline.yml
    if: always() # always run so we metric failures and successes
    with:
      aws-region: us-east-1
      metric-name: kava.deploys.testnet.proto
      namespace: Kava/ContinuousDeployment
    secrets: inherit
    needs: [seed-chain-state]